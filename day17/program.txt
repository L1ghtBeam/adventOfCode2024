Register A: 63687530
Register B: 0
Register C: 0

0.		BST		A       ; B = A mod 8 (keep lowest 3 bits)
1.		BXL		3       ; B = B xor 3 (flip lowest 2 bits)
2.		CDV		B       ; C = A / 2^B (C = A after removing lowest B bits from A)
3.		ADV		3       ; A = A / 2^3 (remove lowest 3 bits from A)
4.		BXL		5       ; B = B xor 5 (flip first and last B bits)
5.		BXC		        ; B = B xor C
6.		OUT		B       ; print lowest 3 bits of B
7.		JNZ		0       ; repeat entire program until A = 0

---

The initial value of A is broken up into bits of 3 to form the output

0. After this step, B can be from 0-7
1. Flip the lowest 2 bits temporarily. After conversion

0 -> 3
1 -> 2
2 -> 1
3 -> 0
4 -> 7
5 -> 6
6 -> 5
7 -> 4

This is flipped back in step (4). This only matters for step 2

2. Remove the lowest B bits (from step 1) from the value of A. Store this in C

5. Use this value in C to xor with B and find the number to print the result. Since output only prints the lower 3
bits, the higher bits of C do not matter to the output


The goal is to print 2,4,1,3,7,5,0,3,1,5,4,1,5,5,3,0 as the output
